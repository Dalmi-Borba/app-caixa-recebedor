<!DOCTYPE html>
<html lang="pt-br">
<head>
  <meta charset="UTF-8" />
  <title>Caixa ASM</title>
  <link rel="icon" type="image/png" sizes="16x16" href="assets/img/iasdfavicon.png" />
  <!-- html2canvas para capturar o ticket -->
  <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/qrcodejs/1.0.0/qrcode.min.js"></script>

  <style>
    * { box-sizing: border-box; font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif; margin: 0; padding: 0; }
    body { background-color: #f2f4f8; padding: 2rem; }
    .navbar { display: flex; justify-content: center; background-color: #fff; border: 1px solid #ccc; border-radius: 10px; margin-bottom: 2rem; padding: 1rem; gap: 2rem; }
    .navbar a { text-decoration: none; color: #333; font-weight: 500; }

    table { width: 90%; margin: 0 auto; border-collapse: separate; border-spacing: 0; border: 2px solid #aaa; border-radius: 15px; overflow: hidden; background-color: #fff; }
    th, td { padding: 1rem; text-align: center; border-bottom: 1px solid #ddd; }
    tr:last-child td { border-bottom: none; }

    .btn { padding: 0.5rem 1rem; border: 2px solid #aaa; background-color: white; border-radius: 8px; cursor: pointer; font-weight: bold; margin: 0 4px; }
    a { text-decoration: none; }
    .btn:hover { background-color: #f0f0f0; }
    .link-danger { color: #dc3545; }
    .link-primary { color: #007BFF; }
    .link-success { color: #28a745; }
    .link-secondary { color:#444; }
    .link-danger:hover, .link-primary:hover, .link-success:hover, .link-secondary:hover { text-decoration: underline; }

    /* MODAL */
    .modal { display: none; position: fixed; z-index: 999; left: 0; top: 0; width: 100%; height: 100%; overflow: auto; background-color: rgba(0,0,0,0.4); }
    .modal-body { display: flex; justify-content: center; flex-direction: column; align-items: center; gap: 6px; }
    .modal-content { background-color: #fff; margin: 10% auto; padding: 20px; border-radius: 10px; width: 90%; max-width: 520px; position: relative; box-shadow: 0 0 20px rgba(0,0,0,0.3); }
    .modal-footer { display: flex; justify-content: right; align-items: right; padding: 10px; }
    .close-btn { position: absolute; top: 10px; right: 15px; font-size: 20px; font-weight: bold; color: #888; cursor: pointer; }
    .close-btn:hover { color: #000; }

    .center { display: flex; justify-content: center; align-items: center; gap: 1rem; }
    input[type="text"] { width: 150px; padding: 0.4rem; font-size: 0.95rem; border: 1px solid #ccc; border-radius: 5px; }

    .valores-container { width: 100%; }
    .valor-item { display: grid; grid-template-columns: auto 1fr auto 1fr auto; gap: .5rem; align-items: center; margin-bottom: .5rem; }
    .valor-item label { font-size: .9rem; justify-self: end; }

    /* Filtros no header */
    thead .filters th { padding: .5rem; border-bottom: 1px solid #eee; background: #fafafa; }
    thead .filters input[type="text"] { width: 100%; padding: .35rem .5rem; border: 1px solid #ccc; border-radius: 6px; font-size: .9rem; }
    thead .filters .disabled { background: #f7f7f7; border: none; }

    /* Indicador de ordena√ß√£o */
    th.sortable { cursor: pointer; user-select: none; position: relative; }
    th.sortable::after { content: '‚áÖ'; position: absolute; right: .5rem; opacity: .35; font-size: .9rem; }
    th.sort-asc::after  { content: '‚Üë'; opacity: .7; }
    th.sort-desc::after { content: '‚Üì'; opacity: .7; }

    /* ===== Ticket (recibo) ===== */
    .ticket{
      width: 320px; background:#fff; border:2px solid #c9ced6; border-radius:18px;
      padding:14px; box-shadow:0 6px 18px rgba(0,0,0,.06); font-size:14px; color:#222;
    }
    .ticket .brand{ display:flex; align-items:center; gap:10px; margin-bottom:8px; }
    .ticket .logo{ width:40px; height:40px; border:2px solid #111; border-radius:8px; display:grid; place-items:center; font-weight:800; }
    .ticket .addr{ font-size:12px; color:#666; line-height:1.2; }
    .ticket .title{ text-align:center; font-weight:700; letter-spacing:.08em; margin:8px 0 4px; }
    .ticket .sub{ text-align:center; font-size:11px; color:#666; }
    .ticket .sep{ margin:10px 0; border-top:1px dashed #c9ced6; }
    .ticket .row{ display:flex; justify-content:space-between; gap:10px; margin:4px 0; }
    .ticket .label{ color:#666; width:45%; }
    .ticket .value{ font-weight:600; text-align:right; width:55%; }
    .ticket .box{ border:1px dashed #d3d7de; border-radius:10px; padding:10px; margin-top:6px; }
    .ticket .box h4{ margin:0 0 6px; font-size:12px; color:#333; text-transform:uppercase; letter-spacing:.05em; }
    .ticket table{ width:100%; border-collapse:collapse; font-size:12px; }
    .ticket th, .ticket td{ padding:6px 4px; }
    .ticket thead th{ text-align:left; font-weight:700; border-bottom:1px dashed #c9ced6; color:#333; }
    .ticket td.qty, .ticket td.price, .ticket td.total{ text-align:right; white-space:nowrap; }
    .ticket tfoot td{ border-top:1px dashed #c9ced6; font-weight:700; }
    .ticket .paid{ text-align:center; font-weight:800; margin-top:6px; }
    .ticket .barcode{
      height:60px; margin:8px auto 0; width:92%;
      background: repeating-linear-gradient(90deg, #000 0, #000 2px, transparent 2px, transparent 4px);
      border-radius:4px; position:relative;
    }
    .ticket .barcode small{
      position:absolute; left:0; right:0; bottom:-18px;
      text-align:center; letter-spacing:.2em; font-size:12px; color:#333;
    }
    .ticket .sign{ margin-top:18px; text-align:center; color:#666; font-size:12px; }
    .ticket .sign .line{ border-top:1px solid #c9ced6; width:70%; margin:26px auto 6px; }

    #ticketCanvas { position: fixed; left: -10000px; top: 0; z-index: -1; }

    /* --- Nome centralizado com bot√µes .btn (igual ao Valor) --- */
    .nome-container { width:100%; display:flex; flex-direction:column; align-items:center; }
    .nome-item { display:flex; align-items:center; justify-content:center; gap:.5rem; margin:.25rem 0; }
    .nome-item input[type="text"] { text-align:center; }
  </style>
</head>
<body>
  <div class="navbar">
    <a class="nav-link active" href="/">Home</a>
    <a class="nav-link" href="/view">Solicita√ß√µes</a>
    <a class="nav-link" href="/movimentos">Movimentos</a>
    <a class="nav-link" href="/filtrar">Filtros</a>
    <a class="nav-link" href="/config">Configura√ß√µes</a>
  </div>

  <div class="center">
    <form action="/lotes-new" method="POST">
      <input type="text" id="lote" name="lote"  pattern="^(0?[1-9]|1[0-2])-[0-9]{4}$" title="Digite no formato MM-AAAA, ex: 8-2025 ou 12-2025" placeholder="N¬∫ lote - ex: 8-2025" required>
      <label for="checkAll" id="checkAllLabel">Marcar todos</label>
      <input type="checkbox" id="checkAll" name="checkAll" value="">
      <input type="text" id="checkinput" name="checkinput" value="" hidden required>
      <button class="btn" type="submit">Cria lote</button>
    </form>
  </div>
  <br>

  <table id="tabela">
    <thead>
      <tr>
        <th class="sortable">Tipo L√ßto</th>
        <th class="sortable">Requisitante</th>
        <th class="sortable">Data</th>
        <th class="sortable">Nome</th>
        <th class="sortable">Descri√ß√£o</th>
        <th class="sortable">Depto</th>
        <th class="sortable">Valor</th>
        <th class="sortable">Obs</th>
        <th>A√ß√µes</th>
      </tr>
      <tr class="filters">
        <th><input type="text" placeholder="Filtrar Tipo"></th>
        <th><input type="text" placeholder="Filtrar Requisitante"></th>
        <th><input type="date" placeholder="Filtrar Data"></th>
        <th><input type="text" placeholder="Filtrar Nome"></th>
        <th><input type="text" placeholder="Filtrar Descri√ß√£o"></th>
        <th><input type="text" placeholder="Filtrar Depto"></th>
        <th><input type="text" placeholder="Filtrar Valor"></th>
        <th><input type="text" placeholder="Filtrar Obs"></th>
      </tr>
    </thead>

    <tbody>
      <% items.forEach(function(image) { %>
        <tr>
          <td><%= image.flag %></td>
          <td><%= image.user %></td>
          <td><%= image.data %></td>
          <td><%= image.nome %></td>
          <td><%= image.material %></td>
          <td><%= image.nome_depto %></td>
          <td><%= image.valor %></td>
          <td><%= image.obs %></td>
          <td>
            <% if (image.tipo === "caixa") { %>
              <a  onclick="removerLancamento('<%= image.id %>')" class="link-danger">üóë Excluir</a>
              <a href="#" onclick="openModal('<%= image.id %>55')" class="link-success">‚úèÔ∏è Editar</a>
            <% } else { %>
              <a href="#" onclick="openModal('<%= image.id %>')" class="link-primary">üìé Anexo</a>
              <a  onclick="removerLancamento('<%= image.id %>')" class="link-danger">üóë Excluir</a>
              <a href="#" onclick="openModal('<%= image.id %>55')" class="link-success">‚úèÔ∏è Editar</a>
            <% } %>

            <a href="#" onclick="baixarRecibo(this)" class="link-secondary"
               data-id="<%= image.id %>"
               data-lote="<%= image.nun_lote %>"
               data-flag="<%= image.flag %>"
               data-data="<%= image.data %>"
               data-nome="<%= image.nome %>"
               data-material="<%= image.material %>"
               data-depto="<%= image.depto %>"
               data-valor="<%= Array.isArray(image.valor) ? image.valor.join('; ') : (image.valor||'') %>"
               data-obs="<%= (image.obs||'').replace(/\"/g,'&quot;') %>">üßæ Recibo</a>

            <input type="checkbox" id="<%= image.id %>check" name="checkItem">
          </td>
        </tr>

        <!-- Modal de anexo -->
        <div id="<%=image.id%>" class="modal">
          <div class="modal-content">
            <div class="modal-header center">
              <p>Nome: <%= image.nome %></p>
            </div>
            <div class="modal-body">
              <object data="uploads/<%=image.img.name%>.pdf" type="application/pdf" width="450px" height="550px">
                <embed src="uploads/<%=image.img.name%>.pdf" type="application/pdf">
                  <p>Seu navegador n√£o suporta PDF. Baixe o arquivo:
                    <a href="uploads/<%=image.img.name%>.pdf">Download PDF</a>.
                  </p>
                </embed>
              </object>
            </div>
            <div class="modal-footer">
              <a onclick="closeModal('<%=image.id%>')" class="link-danger">Fechar</a>
            </div>
          </div>
        </div>

        <!-- Modal de edi√ß√£o -->
        <div id="<%=image.id%>55" class="modal">
          <div class="modal-content">
            <div class="modal-header center">
              <h3><%= image.flag %></h3>
            </div>
            <div class="modal-body center">
              <form action="/doc" method="POST">
                <label for="Lote">Lote:</label>
                <input value="<%=image.nun_lote%>" type="text" id="lote" placeholder="Lote" name="lote">

                <% if (image.flag.includes('dep') || image.flag.includes('pix') || image.flag.includes('trans')) { %>
                  <label for="">Conta Banc√°ria Recebedora:</label>
                  <input value="<%=image.conta%>" type="text" id="conta" placeholder="Conta Bancaria Recebedora" name="conta">
                <% } %>

                <% if (image.tipo === "cartao") { %>
                  <label for="">Vda:</label>
                  <input value="<%=image.vda%>" type="text" id="vda" placeholder="Vda" name="vda">
                  <label for="">N√∫mero da Parcela:</label>
                  <input value="<%=image.nun_parcela%>" type="text" id="nun_parcela" placeholder="N√∫mero da Parcela" name="nun_parcela">
                  <label for="">Tipo de Cart√£o:</label>
                  <select name="tipo_cartao" id="tipo_cartao" required>
                    <option value="credito" <%= image.tipo_cartao === "credito" ? "selected" : "" %>>Cr√©dito</option>
                    <option value="debito"  <%= image.tipo_cartao === "debito"  ? "selected" : "" %>>D√©bito</option>
                  </select>
                <% } %>

                <!-- ===== Nome ===== -->
                <% if (image.flag.includes('dep') || image.flag.includes('pix') || image.flag.includes('trans')) { %>
                <label for="">Nome:</label>
                <div class="nome-container">
                  <%
                    const _nomesParsed = (image.nome && typeof image.nome === 'string')
                      ? (image.nome.includes(';')
                          ? image.nome.split(';').map(n => n.trim()).filter(Boolean)
                          : [image.nome.trim()])
                      : [String(image.nome||'').trim()];
                    const _nomesFinal = _nomesParsed.length ? _nomesParsed : [''];
                    _nomesFinal.forEach(function(n){
                  %>
                    <div class="nome-item">
                      <input value="<%= n %>" type="text" placeholder="Nome" name="nome-temp" required
                             oninput="atualizarHiddenNome('<%= image.id %>55')">
                      <button type="button" class="btn" onclick="removerNome(this, '<%= image.id %>55')">Remover</button>
                    </div>
                  <% }) %>
                </div>
                
                <input type="hidden" name="nome" class="nome-hidden" value="">
                <div class="center" style="margin:8px 0;">
                  <button type="button" class="btn" onclick="adicionarNome('<%= image.id %>55')">+ Adicionar nome</button>
                </div>
                
                 <% } else { %>
                  <label for="">Nome:</label>
                  <input value="<%= image.nome %>" type="text" id="nome" placeholder="Nome" name="nome" required>
                <% } %>
                <!-- ===== /Nome ===== -->

                <label for="">Descri√ß√£o:</label>
                <input value="<%=image.material%>" type="text" id="material" placeholder="Descri√ß√£o" name="material" required>

                <label for="">Departamento:</label>
                <input value="<%=image.depto%>" type="text" id="depto" placeholder="Departamento" name="depto" required>

                <!-- ===== Valores ===== -->
                <!-- 
                  para suportar o form de dep√≥sito, transfer√™ncia e pix,
                  √© nescess√°rio fazer esse if, para edi√ß√£o de multilhos valores e foveorecidos em um doc mongo.
                 -->
                <% if (image.flag.includes('dep') || image.flag.includes('pix') || image.flag.includes('trans')) { %>
                <%
                  let valores = Array.isArray(image.valor) ? image.valor : [image.valor];
                  if (valores.length === 1 && typeof valores[0] === 'string' && valores[0] && valores[0].includes(';')) {
                    valores = valores[0].split(';').map(v => v.trim()).filter(v => v.length);
                  } else { valores = valores.map(v => String(v ?? '').trim()).filter(v => v.length); }
                  let datas = Array.isArray(image.data) ? image.data : [image.data];
                  if (datas.length === 1 && typeof datas[0] === 'string' && datas[0] && datas[0].includes(';')) {
                    datas = datas[0].split(';').map(d => d.trim()).filter(d => d.length);
                  } else { datas = datas.map(d => String(d ?? '').trim()).filter(d => d.length); }
                  const maxLen = Math.max(valores.length, datas.length, 1);
                  while (valores.length < maxLen) valores.push('');
                  while (datas.length   < maxLen) datas.push('');
                %>

                <div class="valores-container">
                  <% for (let i = 0; i < Math.max(valores.length, datas.length); i++) { %>
                    <div class="valor-item">
                      <label>Valor:</label>
                      <input value="<%= valores[i] %>" type="text" placeholder="Valor" class="valor-input"
                             oninput="mascaraMoeda(event); atualizarHidden('<%= image.id %>55')">
                      <label>Data:</label>
                      <input value="<%= datas[i] %>" type="date" class="data-input"
                             oninput="atualizarHidden('<%= image.id %>55')">
                      <button type="button" class="btn" onclick="removerValor(this, '<%= image.id %>55')">Remover</button>
                    </div>
                  <% } %>
                </div>

                <div class="center" style="margin:8px 0;">
                  <button type="button" class="btn" onclick="adicionarValor('<%= image.id %>55')">+ Adicionar valor/data</button>
                </div>
                <input type="hidden" name="valor" class="valor-hidden" value="">
                <input type="hidden" name="date"  class="datas-hidden" value="">
                <% } else { %>
                  <label for="">Valor:</label>
                  <input value="<%= image.valor %>" type="text" id="valor" placeholder="Valor" name="valor" required>
                  <label for="">Data:</label>
                  <input value="<%= image.data %>" type="date" id="date" placeholder="Data" name="date" required>
                <% } %>
                <!-- /Valores -->


                <label for="obs">Observa√ß√µes:</label>
                <textarea id="obs" name="obs"><%= image.obs %></textarea>

                <button class="btn btn-primary shadow d-block w-100" type="submit">Enviar</button>
                <input type="hidden" name="id" value="<%=image.id%>">
              </form>
            </div>
            <div class="modal-footer">
              <a onclick="closeModal('<%=image.id%>55')" class="link-danger">Fechar</a>
            </div>
          </div>
        </div>
      <% }) %>
    </tbody>
  </table>

  <!-- ===== Template do Ticket (fora da tela) ===== -->
  <div id="ticketCanvas">
    <div id="ticket" class="ticket">
      <div class="brand">
        <div class="logo"><img src="assets/img/iasdfavicon.png" alt="" width="38" height="38"></div>
        <div>
          <div><strong id="tk-org">Associa√ß√£o Sul-Mato-Grossense</strong></div>
          <div class="addr" id="tk-addr">Rua Armando de Oliveira, 135 ‚Ä¢ Campo Grande/MS<br/>CNPJ 07.121.135/0003-16</div>
        </div>
      </div>

      <div class="title">RECIBO</div>
      <div class="sub" id="tk-num-data">N¬∫ ‚Äî ‚Ä¢ ‚Äî</div>
      <div class="sep"></div>

      <div class="row"><div class="label">Recebemos de:</div><div class="value" id="tk-nome">‚Äî</div></div>
      <div class="row"><div class="label">Referente a:</div><div class="value" id="tk-ref">‚Äî</div></div>

      <div class="box">
        <h4>Itens</h4>
        <table>
          <thead><tr><th>Descri√ß√£o</th><th class="qty">Qtde</th><th class="price">V. Unit.</th><th class="total">Total</th></tr></thead>
          <tbody id="tk-itens"><tr><td>‚Äî</td><td class="qty">1</td><td class="price">‚Äî</td><td class="total">‚Äî</td></tr></tbody>
          <tfoot>
            <tr><td colspan="3" style="text-align:right;">Total Pago</td><td class="total" id="tk-total">‚Äî</td></tr>
          </tfoot>
        </table>
      </div>

      <div class="row"><div class="label">Forma de pagamento:</div><div class="value" id="tk-flag">‚Äî</div></div>
      <div class="paid">PAGO</div>
      <div class="sep"></div>

      <div class="barcode" style="background:none; height:auto; display:flex; flex-direction:column; align-items:center; gap:6px;">
        <div id="tk-qrcode"></div>
        <small id="tk-barcode">‚Äî</small>
      </div>

      <div class="sign"><div class="line"></div>*Este recibo n√£o √© valido para tesouraria de igrejas, para esse fim solicite o recibo cont√°bil.</div>
    </div>
  </div>

<script>
  // ===== helpers =====
  function mascaraMoeda(event) {
    const onlyDigits = event.target.value.split("").filter(s => /\d/.test(s)).join("").padStart(3, "0");
    const digitsFloat = onlyDigits.slice(0, -2) + "." + onlyDigits.slice(-2);
    event.target.value = new Intl.NumberFormat('pt-BR', { style: 'currency', currency: 'BRL' }).format(digitsFloat);
  }
  function maskBRL(n){ return new Intl.NumberFormat('pt-BR',{style:'currency',currency:'BRL'}).format(n||0); }
  function parseCurrencyBRStringList(txt){
    if(!txt) return { list:[], total:0 };
    const parts = String(txt).split(';').map(s=>s.trim()).filter(Boolean);
    const nums = parts.map(p=>{
      const n = p.replace(/[^\d,-]/g,'').replace(/\./g,'').replace(',','.');
      const v = parseFloat(n); return isNaN(v)?0:v;
    });
    const total = nums.reduce((a,b)=>a+b,0);
    return { list: parts, total };
  }
  const fmtDataBR = (s)=>{
    if(/^\d{4}-\d{2}-\d{2}$/.test(s)){
      const [y,m,d]=s.split('-'); return `${d}/${m}/${y}`;
    }
    return s || '';
  };

  // ===== modal open/close =====
  function openModal(id) {
    const modal = document.getElementById(id);
    if (modal) {
      modal.style.display = 'block';
      document.body.style.overflow = 'hidden';
      atualizarHidden(id);
      atualizarHiddenNome(id); // prepara hidden 'nome'
    }
  }
  function closeModal(id) {
    const modal = document.getElementById(id);
    if (modal) { modal.style.display = 'none'; document.body.style.overflow = 'auto'; }
  }
  window.onclick = function(event) {
    const modals = document.querySelectorAll('.modal');
    modals.forEach(modal => { if (event.target === modal) { modal.style.display = "none"; document.body.style.overflow = 'auto'; } });
  }

  // ===== sele√ß√£o em lote (s√≥ linhas vis√≠veis) =====
  function atualizarCheckInput() {
    const marcados = Array.from(document.querySelectorAll("input[type=checkbox][name=checkItem]:checked"))
      .map(cb => cb.id.replace("check",""));
    document.getElementById("checkinput").value = marcados.join(",");
  }
  function linhasVisiveis() {
    return Array.from(document.querySelectorAll("#tabela tbody tr"))
      .filter(tr => tr.style.display !== "none");
  }
  function marcarVisiveis(marcar) {
    linhasVisiveis().forEach(tr => {
      const cb = tr.querySelector('input[type=checkbox][name=checkItem]');
      if (cb) cb.checked = !!marcar;
    });
    atualizarCheckInput();
    document.getElementById("checkAllLabel").innerText = marcar ? "Desmarcar todos" : "Marcar todos";
  }
  document.getElementById("checkAll").addEventListener("change", function () {
    marcarVisiveis(this.checked);
  });
  document.addEventListener("change", function(event) {
    if (event.target.name === "checkItem") atualizarCheckInput();
  });

  // ===== valores + datas (escopo por modal) =====
  function todayISO(){ return new Date().toISOString().slice(0,10); }
  function adicionarValor(modalId) {
    const modal = document.getElementById(modalId); if (!modal) return;
    const container = modal.querySelector('.valores-container');
    const div = document.createElement('div');
    div.className = 'valor-item';
    div.innerHTML = `
      <label>Valor:</label>
      <input type="text" placeholder="Valor" class="valor-input" oninput="mascaraMoeda(event); atualizarHidden('${modalId}')">
      <label>Data:</label>
      <input type="date" class="data-input" oninput="atualizarHidden('${modalId}')">
      <button type="button" class="btn" onclick="removerValor(this, '${modalId}')">Remover</button>
    `;
    container.appendChild(div);
    div.querySelector('.data-input').value = todayISO();
    atualizarHidden(modalId);
  }
  function removerValor(btn, modalId) {
    const item = btn.closest('.valor-item'); if (item) item.remove();
    atualizarHidden(modalId);
  }
  function atualizarHidden(modalId) {
    const modal = document.getElementById(modalId); if (!modal) return;
    const itens = Array.from(modal.querySelectorAll('.valor-item'));
    const valores = [], datas = [];
    itens.forEach(item => {
      const v = (item.querySelector('.valor-input')?.value || '').trim();
      const d = (item.querySelector('.data-input')?.value  || '').trim();
      valores.push(v); datas.push(d);
    });
    const hiddenValores = modal.querySelector('.valor-hidden');
    const hiddenDatas   = modal.querySelector('.datas-hidden');
    if (hiddenValores) hiddenValores.value = valores.join('; ');
    if (hiddenDatas)   hiddenDatas.value   = datas.join('; ');
  }

  // ===== NOME (multi) -> hidden string "nome" com '; ' (bot√µes .btn) =====
  function adicionarNome(modalId){
    const modal = document.getElementById(modalId); if(!modal) return;
    const cont  = modal.querySelector('.nome-container'); if(!cont) return;

    const div = document.createElement('div');
    div.className = 'nome-item';
    div.innerHTML = `
      <input type="text" placeholder="Nome" name="nome-temp" required oninput="atualizarHiddenNome('${modalId}')">
      <button type="button" class="btn" onclick="removerNome(this, '${modalId}')">Remover</button>
    `;
    cont.appendChild(div);
    atualizarHiddenNome(modalId);
  }

  function removerNome(btn, modalId){
    const item = btn.closest('.nome-item'); if(item) item.remove();
    const modal = document.getElementById(modalId);
    const cont  = modal ? modal.querySelector('.nome-container') : null;
    if (cont && cont.children.length === 0) {
      adicionarNome(modalId); // mant√©m pelo menos 1 campo
    } else {
      atualizarHiddenNome(modalId);
    }
  }

  function atualizarHiddenNome(modalId){
    const modal = document.getElementById(modalId); if(!modal) return;
    const nomes = Array.from(modal.querySelectorAll('.nome-item input[name="nome-temp"]'))
      .map(inp => inp.value.trim())
      .filter(Boolean);
    const hiddenNome = modal.querySelector('.nome-hidden');
    if (hiddenNome) hiddenNome.value = nomes.join('; ');
  }

  // ===== Filtros e Ordena√ß√£o =====
  (function(){
    const table = document.getElementById('tabela');
    const tbody = table.querySelector('tbody');
    const headers = Array.from(table.querySelectorAll('thead tr:first-child th'));
    const filterInputs = Array.from(table.querySelectorAll('thead tr.filters th input'));
    let sortState = { col: 2, dir: 'desc' };

    const parseCurrencyBR = (txt) => {
      if (!txt) return NaN;
      const first = String(txt).split(';')[0];
      const n = first.replace(/[^\d,-]/g,'').replace(/\./g,'').replace(',', '.');
      const v = parseFloat(n);
      return isNaN(v) ? NaN : v;
    };
    const parseDateFlexible = (txt) => {
      if (!txt) return NaN;
      const first = String(txt).split(';')[0].trim();
      if (/^\d{4}-\d{2}-\d{2}$/.test(first)) return new Date(first).getTime();
      if (/^\d{2}\/\d{2}\/\d{4}$/.test(first)) {
        const [d,m,y] = first.split('/'); return new Date(`${y}-${m}-${d}`).getTime();
      }
      const t = new Date(first).getTime(); return isNaN(t) ? NaN : t;
    };
    const getColType = (idx) => (idx===2?'date': idx===6?'money':'text');
    const cmp = (a,b,idx,dir)=>{
      const ta=a.cells[idx].innerText.trim(), tb=b.cells[idx].innerText.trim();
      let va,vb; const type=getColType(idx);
      if(type==='money'){ va=parseCurrencyBR(ta); vb=parseCurrencyBR(tb); }
      else if(type==='date'){ va=parseDateFlexible(ta); vb=parseDateFlexible(tb); }
      else { va=ta.toLowerCase(); vb=tb.toLowerCase(); }
      if (va<vb) return dir==='asc'?-1:1;
      if (va>vb) return dir==='asc'?1:-1;
      return 0;
    };
    const applySort = ()=>{
      const rows = Array.from(tbody.querySelectorAll('tr'));
      rows.sort((ra,rb)=>cmp(ra,rb,sortState.col,sortState.dir));
      rows.forEach(r=>tbody.appendChild(r));
      headers.forEach((th,i)=>{ th.classList.remove('sort-asc','sort-desc'); if(i===sortState.col) th.classList.add(sortState.dir==='asc'?'sort-asc':'sort-desc'); });
      const checkAll = document.getElementById('checkAll');
      if (checkAll && checkAll.checked) marcarVisiveis(true);
    };
    const applyFilters = ()=>{
      const values = filterInputs.map(inp=>inp?inp.value.toLowerCase():'');
      Array.from(tbody.querySelectorAll('tr')).forEach(tr=>{
        const tds = Array.from(tr.children);
        const visible = values.every((val,i)=>{
          if(!val) return true;
          if(i===8) return true;
          const cell=(tds[i]?.innerText||'').toLowerCase();
          return cell.includes(val);
        });
        tr.style.display = visible ? '' : 'none';
      });
      const checkAll = document.getElementById('checkAll');
      if (checkAll && checkAll.checked) marcarVisiveis(true);
    };
    headers.forEach((th,i)=>{ if(i===8) return; th.classList.add('sortable'); th.addEventListener('click',()=>{ if(sortState.col===i){ sortState.dir=sortState.dir==='asc'?'desc':'asc'; } else { sortState.col=i; sortState.dir=(getColType(i)==='text')?'asc':'desc'; } applySort(); }); });
    filterInputs.forEach(inp=>{ if(!inp||inp.disabled) return; inp.addEventListener('input', applyFilters); });
    applySort();
  })();

  // ===== Baixar Recibo como Imagem =====
  async function baixarRecibo(el){
    const a = el;
    const data = {
      id: a.dataset.id || '',
      lote: a.dataset.lote || '',
      flag: a.dataset.flag || '',
      data: a.dataset.data || '',
      nome: a.dataset.nome || '',
      material: a.dataset.material || '',
      depto: a.dataset.depto || '',
      valorStr: a.dataset.valor || '',
      obs: a.dataset.obs || ''
    };

    document.getElementById('tk-num-data').textContent = `N¬∫ ${data.id} ‚Ä¢ ${fmtDataBR(data.data)}`;
    document.getElementById('tk-nome').textContent = data.nome;
    document.getElementById('tk-ref').textContent  = data.material;
    document.getElementById('tk-flag').textContent = data.flag || '‚Äî';
    document.getElementById('tk-barcode').textContent = `${String(data.id).padStart(8,'0')}`;

    const qrContainer = document.getElementById('tk-qrcode');
    qrContainer.innerHTML = "";
    new QRCode(qrContainer, { text: String(data.id), width: 80, height: 80 });

    const itensBody = document.getElementById('tk-itens');
    itensBody.innerHTML = '';

    const { list, total } = parseCurrencyBRStringList(data.valorStr);
    if(list.length){
      list.forEach((v,i)=>{
        const tr = document.createElement('tr');
        tr.innerHTML = `<td>${data.material}${list.length>1?` (Parc. ${i+1})`:''}</td>
                        <td class="qty">1</td>
                        <td class="price">${v}</td>
                        <td class="total">${v}</td>`;
        itensBody.appendChild(tr);
      });
    }else{
      const tr = document.createElement('tr');
      tr.innerHTML = `<td>${data.material}</td><td class="qty">1</td><td class="price">‚Äî</td><td class="total">‚Äî</td>`;
      itensBody.appendChild(tr);
    }
    document.getElementById('tk-total').textContent = maskBRL(total);

    const ticket = document.getElementById('ticket');
    const canvas = await html2canvas(ticket, { scale: 3, backgroundColor: null, useCORS: true });
    const link = document.createElement('a');
    const nomeFile = `recibo_${(data.nome||'').replace(/\s+/g,'_')}_${String(data.id||'').slice(-6)}.png`;
    link.download = nomeFile;
    link.href = canvas.toDataURL('image/png');
    link.click();
  }

  //Excluir lan√ßamento
  function removerLancamento(id) {
    if (confirm('Tem certeza que deseja remover?')) {
      fetch(`/delete/${id}`, {
        method: 'GET',
        headers: {
          'Content-Type': 'application/json',
        },
      })
        .then(response => response.json())
        .then(response => {
          if (response.success) {
            location.reload();
          } else {
            alert('Ocorreu um erro ao remover.');
          }
        });
    }
  }
</script>
</body>
</html>
